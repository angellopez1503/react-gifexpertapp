{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","items","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAY,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EAERC,mBAAS,IAFD,mBAElCC,EAFkC,KAEvBC,EAFuB,KAoBxC,OAEQ,sBAAMC,SAbK,SAACC,GAChBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAK,OAAGP,GAAH,mBAAiBO,OACpCN,EAAc,MAOd,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAtBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,iDAEmCC,UAAUH,GAF7C,yEAGAI,MAAMF,GAHN,cAGXG,EAHW,gBAIEA,EAAKC,OAJP,uBAIVC,EAJU,EAIVA,KAGDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAXxB,kBAkBZM,GAlBY,4CAAD,sDCEPO,EAAY,SAAC,GAAe,IAAdH,EAAa,EAAbA,MAAMV,EAAO,EAAPA,IAE7B,OACI,sBAAKc,UAAU,yDAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAI,UACnB,4BAAIN,QCFFO,EAAQ,SAAC,GAAc,IAAbnB,EAAY,EAAZA,SAAY,ECFT,SAAEA,GAAa,IAAD,EAEbd,mBAAS,CAC5BqB,KAAK,GACLa,SAAQ,IAJwB,mBAE7BC,EAF6B,KAEvBC,EAFuB,KA0BpC,OAnBAC,qBAAU,WAENxB,EAAQC,GACCwB,MAAK,SAAAC,GAEEC,QAAQC,IAAIF,GACZH,EAAS,CACLF,SAAQ,EACRb,KAAKkB,SAK3B,CAACzB,IAMIqB,EDdqBO,CAAc5B,GAA/Ba,EAVoB,EAUzBN,KAAYa,EAVa,EAUbA,QAMlB,OACI,eAAC,WAAD,WAEA,6BAAMpB,IAELoB,GAAW,wCAGZ,qBAAKJ,UAAU,4DAAf,SAGaH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aE9BpBkB,EAAa,WAAK,IAAD,EAGO3C,mBAAS,CAAC,cAHjB,mBAGnB4C,EAHmB,KAGR7C,EAHQ,KAO1B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OAGjB,aADE,CACD,EAAD,CAEAA,SAAWA,GADLA,Y,MCjBhC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.378f4c00.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory=({setCategories})=>{\r\n\r\n    const[inputValue,setInputValue]=useState('');\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n         \r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        //console.log('Submit Hecho');\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(items=>[inputValue,...items]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                >\r\n\r\n                </input>\r\n             </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs=async(category)=> {\r\n        \r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}+and+Morty&limit=10&api_key=3554KENf7aRqwoYylCuQSpjfGFA9liT1`;\r\n    const resp=await fetch(url)\r\n    const {data}=await resp.json();\r\n   // console.log(data);\r\n\r\n    const gifs=data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n   // console.log(gifs);\r\n  //  setImages(gifs);\r\n\r\n  return gifs;\r\n    \r\n}","import React from 'react';\r\n\r\nexport const GifGridItem=({title,url})=>{\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\">\r\n           <img src={url} alt=\"title\"></img>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n\r\n}","import React, {/*  useState,useEffect, */ Fragment } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\n import { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid=({category})=>{\r\n\r\n   /*  const [images,setImages]=useState([]);\r\n\r\n   \r\n\r\n    */\r\n\r\n     \r\n\r\n   const {data:images,loading}= useFetchGifs( category );\r\n  \r\n\r\n\r\n   // getGifs();\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n        <h3>{ category }</h3>\r\n\r\n        {loading && <p>Loading</p> } \r\n\r\n        \r\n        <div className=\"car-grid animate__animated animate__bounce animate__flash\">\r\n            \r\n            {\r\n                     images.map(img=>(\r\n                        <GifGridItem\r\n                        key={img.id} \r\n                        {...img}\r\n                        >\r\n\r\n                        </GifGridItem>\r\n                     ))\r\n            }\r\n             \r\n            \r\n        </div>\r\n        </Fragment>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs=( category )=>{\r\n\r\n    const [state,setState]=useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n                .then(imgs=>{\r\n           //          setTimeout(() => {\r\n                        console.log(imgs);\r\n                        setState({\r\n                            loading:false,\r\n                            data:imgs\r\n                        });\r\n             //       }, 2000);\r\n                })\r\n\r\n    },[category]);\r\n\r\n    // setTimeout(() => {\r\n    //     setState({loading:false,data:[1,2,3,4,5,6,7]});\r\n    // }, 3000);\r\n\r\n    return state; //{data:[],loading:true}\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp=()=>{\r\n\r\n    \r\n    const [categories,setCategories]=useState(['One Punch']);\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}></AddCategory>\r\n            <hr></hr>\r\n            <ol>\r\n                {\r\n                    categories.map(category=>\r\n                        (\r\n                            // <li key={category}>{category}</li>\r\n                          <GifGrid\r\n                          key={ category } \r\n                          category={ category }\r\n                          >\r\n\r\n                          </GifGrid>\r\n                        ) \r\n                    )\r\n                }\r\n            </ol>\r\n     \r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n \n"],"sourceRoot":""}